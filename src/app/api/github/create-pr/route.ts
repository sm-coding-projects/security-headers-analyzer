import { NextRequest, NextResponse } from 'next/server';
import { GitHubIntegration } from '@/lib/github-integration';
import { PRResponse, GitHubPRRequest, SecurityHeader } from '@/types/security';

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { repoUrl, headers, title, body: prBody, branch, githubToken } = body as GitHubPRRequest & { githubToken: string };

    // Validate required fields
    if (!repoUrl) {
      const response: PRResponse = {
        success: false,
        error: 'Repository URL is required',
      };
      return NextResponse.json(response, { status: 400 });
    }

    if (!headers || !Array.isArray(headers)) {
      const response: PRResponse = {
        success: false,
        error: 'Headers array is required',
      };
      return NextResponse.json(response, { status: 400 });
    }

    if (!githubToken) {
      const response: PRResponse = {
        success: false,
        error: 'GitHub access token is required',
      };
      return NextResponse.json(response, { status: 400 });
    }

    // Initialize GitHub integration
    const github = new GitHubIntegration(githubToken);

    // Validate repository access
    const hasAccess = await github.validateRepositoryAccess(repoUrl);
    if (!hasAccess) {
      const response: PRResponse = {
        success: false,
        error: 'Cannot access repository. Please check the URL and your permissions.',
      };
      return NextResponse.json(response, { status: 403 });
    }

    // Create PR with security headers configuration
    const prRequest: GitHubPRRequest = {
      repoUrl,
      headers,
      title: title || 'Security Headers Configuration - Auto-Generated Fix',
      body: prBody || generatePRBody(headers),
      branch: branch || `security-headers-fix-${Date.now()}`,
    };

    const result = await github.createSecurityHeadersPR(prRequest);

    return NextResponse.json(result, {
      status: result.success ? 200 : 400
    });
  } catch (error) {
    console.error('GitHub PR creation error:', error);

    const response: PRResponse = {
      success: false,
      error: error instanceof Error ? error.message : 'An unexpected error occurred',
    };

    return NextResponse.json(response, { status: 500 });
  }
}

export async function GET() {
  return NextResponse.json(
    { error: 'Method not allowed. Use POST to create a pull request.' },
    { status: 405 }
  );
}

function generatePRBody(headers: SecurityHeader[]) {
  const missingHeaders = headers.filter(h => !h.present);
  const incorrectHeaders = headers.filter(h => h.present && h.score < 100);

  let body = '# Security Headers Configuration\n\n';
  body += 'This pull request adds security headers configuration to improve your website\'s security posture.\n\n';

  if (missingHeaders.length > 0) {
    body += '## Missing Headers\n\n';
    missingHeaders.forEach(header => {
      body += `- **${header.name}**: ${header.description}\n`;
    });
    body += '\n';
  }

  if (incorrectHeaders.length > 0) {
    body += '## Headers That Need Improvement\n\n';
    incorrectHeaders.forEach(header => {
      body += `- **${header.name}**: ${header.recommendation}\n`;
    });
    body += '\n';
  }

  body += '## What This PR Does\n\n';
  body += '- Adds a `SECURITY_HEADERS_CONFIG.md` file with configuration examples\n';
  body += '- Provides configurations for Next.js, Apache, and Nginx\n';
  body += '- Includes detailed explanations for each security header\n\n';

  body += '## Implementation\n\n';
  body += 'Choose the configuration that matches your server setup and implement the headers accordingly. ';
  body += 'After implementation, you can verify the changes using the Security Headers Analyzer tool.\n\n';

  body += '## Security Benefits\n\n';
  body += '- Protection against XSS attacks\n';
  body += '- Prevention of clickjacking\n';
  body += '- Mitigation of MIME type confusion attacks\n';
  body += '- Enhanced HTTPS security\n';
  body += '- Better control over browser features and permissions\n\n';

  body += '---\n\n';
  body += '*This PR was automatically generated by the Security Headers Analyzer tool.*';

  return body;
}